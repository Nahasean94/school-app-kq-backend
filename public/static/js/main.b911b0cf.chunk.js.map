{"version":3,"sources":["components/NavigationBar.js","components/App.js","components/Home.js","shared/TextFieldsGroup.js","shared/fetchOverrideOptions.js","components/signup/SignupForm.js","shared/queries.js","components/signup/SignupPage.js","actions/types.js","actions/loginActions.js","components/login/LoginForm.js","components/login/LoginPage.js","utils/requireLogin.js","components/pages/Students.js","components/pages/Teachers.js","utils/requireStudentAuth.js","components/pages/KCPE.js","utils/requireTeacherAuth.js","components/pages/Classes.js","components/pages/Menus.js","utils/requireAdminAuth.js","components/pages/Roles.js","components/pages/Subjects.js","components/pages/PageNotFound.js","reducers/loginReducers.js","rootReducer.js","registerServiceWorker.js","index.js","routes.js"],"names":["NavigationBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","bind","assertThisInitialized","e","preventDefault","localStorage","removeItem","context","router","history","push","token","isAuthenticated","getItem","jwt","decode","userLinks","react_default","a","createElement","className","Link","to","onClick","guestLinks","studentLinks","teacherLinks","adminLinks","roleLinks","role","id","React","Component","contextTypes","PropTypes","object","isRequired","App","components_NavigationBar","children","Home","TextFieldGroup","_ref","name","value","label","error","type","onChange","checkLocationExists","checkIfExists","autoFocus","classnames","is-invalid","onBlur","onKeyUp","defaultTypes","fetchOptionsOverride","options","url","headers","Authorization","concat","roleOptions","SignupForm","handleRoleChange","setState","state","email","password","passwordConfirmation","errors","isLoading","invalid","loading","message","onSubmit","checkUserExists","_this2","val","target","graphql","query","resetOnLoad","operation","variables","request","then","graphQLErrors","data","form","isUserExists","exists","validator","isEmpty","isEmail","equals","isValid","_this$validateInput","validateInput","_this3","trim","_ref2","createUser","success","defineProperty","_this4","_this$state","TextFieldsGroup","htmlFor","components","loadOnMount","loadOnReset","_ref3","getSignupRoles","map","react_select_es","Creatable","closeOnSelect","placeholder","removeSelected","disabled","NavLink","SignupPage","signup_SignupForm","SET_CURRENT_USER","setCurrentUser","user","LoginForm","console","log","login","ok","setLoginToken","connect","userData","dispatch","setItem","LoginPage","login_LoginForm","requireLogin","ComposedComponent","Authenticate","_React$Component","inherits","createClass","key","nextProps","loginReducers","Students","scope","getAllStudents","student","Teachers","count","getAllTeachers","teacher","requireStudentAuth","KCPE","requireTeacherAuth","Classes","Menus","requireAdminAuth","Roles","Subjects","PageNotFound","initialState","combineReducers","arguments","length","undefined","action","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","store","createStore","rootReducer","compose","applyMiddleware","thunk","GraphQL","ReactDOM","render","es","BrowserRouter","components_App","Switch","Route","exact","path","component","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b911b0cf.chunk.js","sourcesContent":["import React from 'react'\r\nimport jwt from \"jsonwebtoken\"\r\nimport {Link} from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\nimport {getDirectiveValues} from 'graphql/execution/values'\r\n\r\nclass NavigationBar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.logout = this.logout.bind(this)\r\n    }\r\n\r\n\r\n    logout(e) {\r\n        e.preventDefault()\r\n        localStorage.removeItem('SchoolSystem')\r\n        this.context.router.history.push('/')\r\n    }\r\n\r\n    render() {\r\n\r\n        let isAuthenticated = false\r\n        let token\r\n        if (localStorage.getItem('SchoolSystem')) {\r\n            token = jwt.decode(localStorage.getItem('SchoolSystem'))\r\n            isAuthenticated = true\r\n        }\r\n\r\n        const userLinks = (<div className=\"navbar-nav flex-row ml-md-auto\">\r\n            <Link to=\"\" className=\"nav-item nav-link nav-link-custom\" onClick={this.logout}>Logout</Link>\r\n        </div>)\r\n\r\n        const guestLinks = (<div className=\"navbar-nav flex-row ml-md-auto\">\r\n            <Link to=\"login\" className=\"nav-item nav-link nav-link-custom\">Sign in</Link>\r\n        </div>)\r\n\r\n        const studentLinks = <div className=\" collapse navbar-collapse\">\r\n            <div className=\"navbar-nav\">\r\n                <Link to=\"/students\" className=\"nav-item nav-link nav-link-custom\">Students</Link>\r\n                <Link to=\"/subjects\" className=\"nav-item nav-link nav-link-custom\">Subjects</Link>\r\n                <Link to=\"/kcpe\" className=\"nav-item nav-link nav-link-custom\">KCPE</Link>\r\n            </div>\r\n        </div>\r\n\r\n        const teacherLinks = <div className=\" collapse navbar-collapse\">\r\n            <div className=\"navbar-nav\">\r\n                <Link to=\"/students\" className=\"nav-item nav-link nav-link-custom\">Students</Link>\r\n                <Link to=\"/classes\" className=\"nav-item nav-link nav-link-custom\">Classes</Link>\r\n            </div>\r\n        </div>\r\n\r\n        const adminLinks = <div className=\" collapse navbar-collapse\">\r\n            <div className=\"navbar-nav\">\r\n                <Link to=\"/students\" className=\"nav-item nav-link nav-link-custom\">Students</Link>\r\n                <Link to=\"/teachers\" className=\"nav-item nav-link nav-link-custom\">Teachers</Link>\r\n                {/*<Link to=\"/roles\" className=\"nav-item nav-link nav-link-custom\">Roles</Link>*/}\r\n                {/*<Link to=\"/menus\" className=\"nav-item nav-link nav-link-custom\">Menus</Link>*/}\r\n            </div>\r\n        </div>\r\n        let roleLinks = ''\r\n        if (token) {\r\n            if (token.role === '5c3a4b8f427a0e57a2b9df44') {//student role\r\n                roleLinks = studentLinks\r\n            } else if (token.role === '5c39b79cb9717d6060a33c80') {//teacher role\r\n                roleLinks = teacherLinks\r\n            } else if (token.role === '5c3a4be8d08d5d582332d66b') {//admin role\r\n                roleLinks = adminLinks\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <nav className=\"navbar navbar-expand-sm bg-dark-green fixed-top \">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Home\r\n                    </Link>\r\n                    {isAuthenticated ? roleLinks : ''}\r\n                    <div className=\"navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        {isAuthenticated ? userLinks : guestLinks}\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nNavigationBar.contextTypes = {\r\n    router: PropTypes.object.isRequired\r\n}\r\n\r\nexport default NavigationBar","import React, {Component} from 'react'\nimport NavigationBar from './NavigationBar'\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <NavigationBar/>\n                <div id=\"body\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return <div className=\"container\">\r\n          <h1>School management system</h1>\r\n          <h6>This is the home page</h6>\r\n\r\n            <p>This page contains information that is general to all users. This is  information such as:</p>\r\n            <ol>\r\n                <li>School Events</li>\r\n                <li>News Articles</li>\r\n                <li>Announcements</li>\r\n                <li>School gallery</li>\r\n            </ol>\r\n        </div>\r\n    }\r\n}\r\n\r\nHome.contextTypes = {\r\n    router: PropTypes.object.isRequired\r\n}\r\nexport default Home","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextFieldGroup = ({ name,value, label, error, type, onChange,checkLocationExists,checkIfExists,autoFocus}) => {\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-3 col-form-label\" >{label}</label>\r\n            <div className=\"col-sm-9\">\r\n                <input type={type} name={name}\r\n                       className={classnames(\"form-control form-control-sm\", {\"is-invalid\": error})}\r\n                       value={value}\r\n                       onChange={onChange}\r\n                       onBlur={checkIfExists}\r\n                       onKeyUp={checkLocationExists}\r\n                       autoFocus={autoFocus}\r\n                />\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nTextFieldGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    error: PropTypes.string,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    checkIfExists: PropTypes.func,\r\n    checkLocationExists: PropTypes.func,\r\n    autoFocus:PropTypes.bool,\r\n\r\n}\r\nTextFieldGroup.defaultTypes = {\r\n    type: 'text'\r\n}\r\nexport default TextFieldGroup","export function fetchOptionsOverride(options) {\r\n    options.url = 'http://68.183.29.191:8080/graphql'\r\n    const token = localStorage.getItem('SchoolSystem')\r\n    if (token) options.headers.Authorization = `Bearer ${token}`\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport validator from 'validator'\r\nimport {isEmpty} from 'lodash'\r\nimport TextFieldGroup from './../../shared/TextFieldsGroup'\r\nimport Select from 'react-select'\r\nimport {fetchOptionsOverride} from \"./../../shared/fetchOverrideOptions\"\r\nimport {Query} from 'graphql-react'\r\nimport {createUser, getSignupRoles, isUserExists} from '../../shared/queries'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nlet roleOptions\r\nclass SignupForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            passwordConfirmation: '',\r\n            role: '',\r\n            errors: {},\r\n            isLoading: false,\r\n            invalid: false,\r\n            loading: false,\r\n            message: ''\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.checkUserExists = this.checkUserExists.bind(this)\r\n        this.handleRoleChange = this.handleRoleChange.bind(this)\r\n    }\r\n    handleRoleChange = (role) => {\r\n        this.setState({role})\r\n    }\r\n\r\n    checkUserExists(e) {\r\n        const val = e.target.value\r\n        if (val !== '') {\r\n            this.props.graphql\r\n                .query({\r\n                    fetchOptionsOverride: fetchOptionsOverride,\r\n                    resetOnLoad: true,\r\n                    operation: {\r\n                        variables: {email: val},\r\n                        query: isUserExists\r\n                    }\r\n                })\r\n                .request.then(({graphQLErrors, data}) => {\r\n                    if (graphQLErrors) {\r\n                        this.setState({errors: {form: graphQLErrors[0].message}, isLoading: false})\r\n                    }\r\n                    if (data) {\r\n                        let errors = this.state.errors\r\n                        let invalid\r\n                        if (data.isUserExists.exists) {\r\n                            invalid = true\r\n                            errors.email = 'email already exists.'\r\n                        } else {\r\n                            invalid = false\r\n                            errors.email = ''\r\n                        }\r\n                        this.setState({errors, invalid})\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    validateInput(data) {\r\n        let errors = {}\r\n        if (validator.isEmpty(data.name)) {\r\n            errors.name = 'This field is required'\r\n        }\r\n        if (validator.isEmpty(data.email)) {\r\n            errors.email = 'This field is required'\r\n        }\r\n        if (!validator.isEmail(data.email)) {\r\n            errors.email = 'This field must be an email'\r\n        }\r\n        if (validator.isEmpty(data.password)) {\r\n            errors.password = 'This field is required'\r\n        }\r\n        if (validator.isEmpty(data.passwordConfirmation)) {\r\n            errors.passwordConfirmation = 'This field is required'\r\n        }\r\n        if (!validator.equals(data.password, data.passwordConfirmation)) {\r\n            errors.passwordConfirmation = 'Passwords must match'\r\n        }\r\n        return {\r\n            errors,\r\n            isValid: isEmpty(errors)\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        const {errors, isValid} = this.validateInput(this.state)\r\n        if (!isValid) {\r\n            this.setState({errors})\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        if (this.isValid()) {\r\n            this.setState({errors: {}, isLoading: true})\r\n            this.setState({errors: {}})\r\n            this.props.graphql\r\n                .query({\r\n                    fetchOptionsOverride: fetchOptionsOverride,\r\n                    resetOnLoad: true,\r\n                    operation: {\r\n                        variables: {\r\n                            name: this.state.name.trim(),\r\n                            email: this.state.email.trim(),\r\n                            password: this.state.password.trim(),\r\n                            role: this.state.role.value\r\n                        },\r\n                        query: createUser\r\n                    }\r\n                })\r\n                .request.then(({graphQLErrors, data}) => {\r\n\r\n                    if (graphQLErrors) {\r\n                        this.setState({errors: {form: graphQLErrors[0].message}, isLoading: false})\r\n                    } else if (data) {\r\n                        if (data.createUser.success) {\r\n                            this.setState({\r\n                                name: '',\r\n                                email: '',\r\n                                password: '',\r\n                                passwordConfirmation: '',\r\n                                role: '',\r\n                                errors: {},\r\n                                isLoading: false,\r\n                                invalid: false,\r\n                                loading: false,\r\n                                message: <div className=\"alert alert-info\">Account successfully created.<br/>Please check your email for further instructions.</div>\r\n                            })\r\n                        }\r\n\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {errors, loading, message} = this.state\r\n        if (loading) {\r\n            return <p>Creating account…</p>\r\n        }\r\n\r\n        if (message) {\r\n            return <p>{message}</p>\r\n        }\r\n\r\n        return (\r\n            <div onSubmit={this.onSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4 offset-sm-4\">\r\n                        <h3>Sign up</h3>\r\n                    </div>\r\n                    {/*<div className=\"col-sm-4\">*/}\r\n                    {/*<button className=\"btn btn-default form-control\" type=\"submit\" id=\"tp-sign-up-btn\">Sign in</button>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n                <form onSubmit={this.onSubmit}>\r\n\r\n                    {errors.form && <div className=\"alert alert-danger\">{errors.form}</div>}\r\n                    <TextFieldGroup\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name} autoFocus={true}\r\n                        onChange={this.onChange}\r\n                        error={errors.name}\r\n                    />\r\n\r\n                    <TextFieldGroup\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.onChange}\r\n                        error={errors.email}\r\n                        checkIfExists={this.checkUserExists}\r\n\r\n                    />\r\n                    <TextFieldGroup\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChange}\r\n                        error={errors.password}\r\n                    />\r\n                    <TextFieldGroup\r\n                        label=\"Confirm Password \"\r\n                        type=\"password\"\r\n                        name=\"passwordConfirmation\"\r\n                        value={this.state.passwordConfirmation}\r\n                        onChange={this.onChange}\r\n                        error={errors.passwordConfirmation}\r\n                    />\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-3 col-form-label\" htmlFor=\"hosts\">Role</label>\r\n                        <div className=\"col-sm-9\">\r\n                            <Query\r\n                                loadOnMount\r\n                                loadOnReset\r\n                                fetchOptionsOverride={fetchOptionsOverride}\r\n                                query={getSignupRoles}\r\n                            >\r\n                                {({loading, data}) => {\r\n                                    if (data) {\r\n                                        roleOptions = data.getSignupRoles.map(role => {\r\n                                            return {\r\n                                                label: role.role,\r\n                                                value: role.id\r\n                                            }\r\n                                        })\r\n                                        return <Select.Creatable\r\n                                            closeOnSelect={true}\r\n                                            onChange={this.handleRoleChange}\r\n                                            options={roleOptions}\r\n                                            placeholder=\"Search role\"\r\n                                            removeSelected={true}\r\n                                            value={this.state.role}/>\r\n                                    }\r\n                                    else if (loading) {\r\n                                        return <p>Loading…</p>\r\n                                    }\r\n                                    return <p>Loading failed.</p>\r\n                                }\r\n                                }\r\n                            </Query>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-9 offset-sm-3\">\r\n                            <button disabled={this.state.isLoading || this.state.invalid}\r\n                                    className=\"btn btn-dark btn-sm form-control\"\r\n                                    type=\"submit\">Sign up\r\n                            </button>\r\n                            <br/>\r\n                            <br/>\r\n                            <h6><NavLink to=\"/login\" className=\"nav-link\">Login</NavLink></h6>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nSignupForm.contextTypes = {\r\n    router: PropTypes.object.isRequired\r\n}\r\n\r\nexport default SignupForm","const login = `\r\n   mutation($email:String!,$password:String!) {\r\n  login(email:$email,password:$password) {\r\n    token\r\n    ok\r\n    error\r\n  }\r\n}\r\n`\r\nconst createUser = `\r\n   mutation($name:String!,$email:String!,$password:String!,$role:String!) {\r\n  createUser(name:$name,email:$email,password:$password,role:$role) {\r\n   success\r\n  }\r\n}\r\n`\r\nconst getSignupRoles = `\r\n   {\r\n  getSignupRoles{\r\n    id\r\n    role\r\n  }\r\n}\r\n`\r\nconst isUserExists = `\r\n   mutation($email:String!){\r\n  isUserExists(email:$email){\r\n   exists\r\n  }\r\n}\r\n`\r\nconst getAllStudents= `\r\n   {\r\n  getAllStudents{\r\n    id\r\n    name\r\n    email\r\n    timestamp\r\n  }\r\n}\r\n`\r\nconst getAllTeachers= `\r\n   {\r\n  getAllTeachers{\r\n    id\r\n    name\r\n    email\r\n    timestamp\r\n  }\r\n}\r\n`\r\nexport {\r\n    login,\r\n    getSignupRoles,\r\n    isUserExists,\r\n    createUser,\r\n    getAllStudents,\r\n    getAllTeachers\r\n\r\n}\r\n","import React from 'react'\r\nimport SignupForm from './SignupForm'\r\nimport {Consumer} from \"graphql-react\"\r\n\r\n\r\nclass SignupPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className=\"col-sm-6 offset-sm-2\">\r\n                    <Consumer >{graphql =>   <SignupForm   graphql={graphql}/>}</Consumer>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignupPage","export const SET_CURRENT_USER = 'SET_CURRENT_USER'","import {SET_CURRENT_USER} from \"./types\"\r\nimport jwt from 'jsonwebtoken'\r\nexport function setLoginToken(userData) {\r\n    return dispatch=>{\r\n            const token=userData\r\n            localStorage.setItem('SchoolSystem',token)\r\n            dispatch(setCurrentUser(jwt.decode(token)))\r\n    }\r\n}\r\nexport function setCurrentUser(user) {\r\n    return{\r\n        type:SET_CURRENT_USER,\r\n        user\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return dispatch=>{\r\n        localStorage.removeItem('SchoolSystem')\r\n        dispatch(setCurrentUser({}))\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport validator from '../../../node_modules/validator/index.js'\r\nimport {isEmpty} from 'lodash'\r\nimport TextFieldGroup from './../../shared/TextFieldsGroup'\r\nimport {setLoginToken} from \"../../actions/loginActions\"\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../shared/queries'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {fetchOptionsOverride} from '../../shared/fetchOverrideOptions'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: {},\r\n            isLoading: false,\r\n            invalid: false,\r\n            loading: false,\r\n            message: this.props.message\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n\r\n    validateInput(data) {\r\n        let errors = {}\r\n\r\n        if (validator.isEmpty(data.email)) {\r\n            errors.email = 'This field is required'\r\n        }\r\n\r\n        if (validator.isEmpty(data.password)) {\r\n            errors.password = 'This field is required'\r\n        }\r\n        return {\r\n            errors,\r\n            isValid: isEmpty(errors)\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        const {errors, isValid} = this.validateInput(this.state)\r\n        if (!isValid) {\r\n            this.setState({errors})\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        if (this.isValid()) {\r\n            this.setState({errors: {}, isLoading: true})\r\n            this.setState({loading: true})\r\n            this.props.graphql\r\n                .query({\r\n                    fetchOptionsOverride: fetchOptionsOverride,\r\n                    resetOnLoad: true,\r\n                    operation: {\r\n                        variables: {email: this.state.email, password: this.state.password},\r\n                        query: login\r\n                    }\r\n                })\r\n                .request.then(({data}) => {\r\n                    console.log(data)\r\n                    if (data.login.token === null || data.login.ok === false) {\r\n                        this.setState({errors: {form: data.login.error}, isLoading: false})\r\n                    } else {\r\n                        this.props.setLoginToken(data.login.token)\r\n                        this.context.router.history.push('/')\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                    }\r\n\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {errors, password, email, invalid, isLoading, message} = this.state\r\n        // if (loading) {\r\n        //     return <p>Loading…</p>\r\n        // }\r\n        // if (message) {\r\n        //     return <p>{message}</p>\r\n        // }\r\n        return (\r\n\r\n            <form onSubmit={this.onSubmit}>\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-sm-4 offset-sm-4\">\r\n                        <h3>Sign in</h3>\r\n                    </div>\r\n                </div>\r\n                {message && <div className=\"alert alert-success\">{message}</div>}\r\n                {errors.form && <div className=\"alert alert-danger\">{errors.form}</div>}\r\n                <TextFieldGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                    // checkUserExists={this.checkUserExists}\r\n                />\r\n                <TextFieldGroup\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={this.onChange}\r\n                    error={errors.password}\r\n                />\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-9 offset-sm-3\">\r\n                        <button disabled={isLoading || invalid} className=\"btn btn-dark btn-sm form-control\"\r\n                                type=\"submit\">Login\r\n                        </button>\r\n                        <br/>\r\n                        <br/>\r\n                        <h6><NavLink to=\"/signup\" className=\"nav-link\">Create an account</NavLink></h6>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n    setLoginToken: PropTypes.func.isRequired,\r\n}\r\nLoginForm.contextTypes = {\r\n    router: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(null, {setLoginToken})(LoginForm)","import React from 'react'\r\nimport LoginForm from './LoginForm'\r\nimport {Consumer} from 'graphql-react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className=\"col-sm-6 offset-sm-2\">\r\n                    <Consumer>{graphql => <LoginForm graphql={graphql}/>}</Consumer>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nexport default function (ComposedComponent) {\r\n    class Authenticate extends React.Component {\r\n        constructor(props){\r\n            super(props)\r\n            this.state={\r\n                isAuthenticated:false\r\n            }\r\n        }\r\n        componentWillMount() {\r\n            if (this.props.isAuthenticated) {\r\n               this.setState({isAuthenticated:true})\r\n            }\r\n        }\r\n\r\n        componentWillUpdate(nextProps) {\r\n            if(!nextProps.isAuthenticated){\r\n                this.context.router.history.push('/')\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if(this.state.isAuthenticated){\r\n            return (\r\n                <ComposedComponent {...this.props}/>\r\n            )\r\n            }\r\n           return ( <div className=\"alert alert-danger\">You do no have the permission to view this page</div>)\r\n        }\r\n\r\n    }\r\n\r\n    Authenticate.propTypes = {\r\n        isAuthenticated: PropTypes.bool.isRequired,\r\n    }\r\n    Authenticate.contextTypes = {\r\n        router: PropTypes.object.isRequired\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            isAuthenticated: state.loginReducers.isAuthenticated,\r\n            user:state.loginReducers.user\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(Authenticate)\r\n}","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport {Query} from 'graphql-react'\nimport {fetchOptionsOverride} from '../../shared/fetchOverrideOptions'\nimport {getAllStudents} from '../../shared/queries'\n// import moment from 'moment'\n\n// let count =0\n\nclass Students extends React.Component {\n    render() {\n        return <div className=\"container\">\n            <h3>This page displays a list of all students </h3>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    {/*<th scope=\"col\">#</th>*/}\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Email</th>\n                    {/*<th scope=\"col\">Date Joined</th>*/}\n                </tr>\n                </thead>\n                <tbody>\n                <Query\n                    loadOnMount\n                    loadOnReset\n                    fetchOptionsOverride={fetchOptionsOverride}\n                    query={getAllStudents}\n                >\n                    {({loading, data}) => {\n                        if (data) {\n                           return data.getAllStudents.map(student => {\n                                return (<tr>\n                                    {/*<td>{count++}</td>*/}\n                                    <td>{student.name}</td>\n                                    <td>{student.email}</td>\n                                    {/*<td>{moment(student.timestamp).format(\"DD-MM-YYYY\")}</td>*/}\n                                </tr>)\n                            })\n\n                        } else if (loading) {\n                            return <tr><td>Loading…</td></tr>\n                        }\n                        return <tr><td>Loading failed.</td></tr>\n                    }\n                    }\n                </Query>\n                </tbody>\n            </table>\n        </div>\n    }\n}\n\nStudents.contextTypes = {\n    router: PropTypes.object.isRequired\n}\nexport default Students","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport {Query} from 'graphql-react'\nimport {fetchOptionsOverride} from '../../shared/fetchOverrideOptions'\nimport {getAllTeachers} from '../../shared/queries'\n\n\n\nclass Teachers extends React.Component {\n    constructor(props){\n        super(props)\n        this.state={\n            count:0\n        }\n    }\n    render() {\n        let count =0\n        return <div className=\"container\">\n            <h3>This page displays a list of all teachers </h3>\n            <table className=\"table\">\n                <thead>\n                <tr>\n\n                    {/*<th scope=\"col\">#</th>*/}\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Email</th>\n                    {/*<th scope=\"col\">Date Joined</th>*/}\n                </tr>\n                </thead>\n                <tbody>\n                <Query\n                    loadOnMount\n                    loadOnReset\n                    fetchOptionsOverride={fetchOptionsOverride}\n                    query={getAllTeachers}\n                >\n                    {({loading, data}) => {\n                        if (data) {\n                           return data.getAllTeachers.map(teacher => {\n                                return (<tr>\n                                    {/*<td>{count++}</td>*/}\n                                    <td>{teacher.name}</td>\n                                    <td>{teacher.email}</td>\n                                    {/*<td>{new Date(teacher.timestamp).toLocaleString()}</td>*/}\n                                </tr>)\n                            })\n\n                        } else if (loading) {\n                            return <tr><td>Loading…</td></tr>\n                        }\n                        return <tr><td>Loading failed.</td></tr>\n                    }\n                    }\n                </Query>\n                </tbody>\n            </table>\n        </div>\n    }\n}\n\nTeachers.contextTypes = {\n    router: PropTypes.object.isRequired\n}\nexport default Teachers","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nexport default function (ComposedComponent) {\r\n    class Authenticate extends React.Component {\r\n        constructor(props){\r\n            super(props)\r\n            this.state={\r\n                isAuthenticated:false\r\n            }\r\n        }\r\n        componentWillMount() {\r\n            if (this.props.isAuthenticated && this.props.user.role==='5c3a4b8f427a0e57a2b9df44') {\r\n               this.setState({isAuthenticated:true})\r\n            }\r\n        }\r\n\r\n        componentWillUpdate(nextProps) {\r\n            if(!nextProps.isAuthenticated){\r\n                this.context.router.history.push('/')\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if(this.state.isAuthenticated){\r\n            return (\r\n                <ComposedComponent {...this.props}/>\r\n            )\r\n            }\r\n           return ( <div className=\"alert alert-danger\">You do no have the permission to view this page</div>)\r\n        }\r\n\r\n    }\r\n\r\n    Authenticate.propTypes = {\r\n        isAuthenticated: PropTypes.bool.isRequired,\r\n    }\r\n    Authenticate.contextTypes = {\r\n        router: PropTypes.object.isRequired\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            isAuthenticated: state.loginReducers.isAuthenticated,\r\n            user:state.loginReducers.user\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(Authenticate)\r\n}","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nclass KCPE extends React.Component {\n    render() {\n        return <div className=\"container\">\n            <h3>This is the page for kcpe </h3>\n\n        </div>\n    }\n}\n\nKCPE.contextTypes = {\n    router: PropTypes.object.isRequired\n}\nexport default KCPE","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nexport default function (ComposedComponent) {\r\n    class Authenticate extends React.Component {\r\n        constructor(props){\r\n            super(props)\r\n            this.state={\r\n                isAuthenticated:false\r\n            }\r\n        }\r\n        componentWillMount() {\r\n            if (this.props.isAuthenticated && this.props.user.role==='5c39b79cb9717d6060a33c80') {\r\n               this.setState({isAuthenticated:true})\r\n            }\r\n        }\r\n\r\n        componentWillUpdate(nextProps) {\r\n            if(!nextProps.isAuthenticated){\r\n                this.context.router.history.push('/')\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if(this.state.isAuthenticated){\r\n            return (\r\n                <ComposedComponent {...this.props}/>\r\n            )\r\n            }\r\n           return ( <div className=\"alert alert-danger\">You do no have the permission to view this page</div>)\r\n        }\r\n\r\n    }\r\n\r\n    Authenticate.propTypes = {\r\n        isAuthenticated: PropTypes.bool.isRequired,\r\n    }\r\n    Authenticate.contextTypes = {\r\n        router: PropTypes.object.isRequired\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            isAuthenticated: state.loginReducers.isAuthenticated,\r\n            user:state.loginReducers.user\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(Authenticate)\r\n}","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nclass Classes extends React.Component {\n    render() {\n        return <div className=\"container\">\n            <h3>This is the page for classes </h3>\n\n        </div>\n    }\n}\n\nClasses.contextTypes = {\n    router: PropTypes.object.isRequired\n}\nexport default Classes","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nclass Menus extends React.Component {\n    render() {\n        return <div className=\"container\">\n            <h3>This is the page for menus </h3>\n\n        </div>\n    }\n}\n\nMenus.contextTypes = {\n    router: PropTypes.object.isRequired\n}\nexport default Menus","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nexport default function (ComposedComponent) {\r\n    class Authenticate extends React.Component {\r\n        constructor(props){\r\n            super(props)\r\n            this.state={\r\n                isAuthenticated:false\r\n            }\r\n        }\r\n        componentWillMount() {\r\n            if (this.props.isAuthenticated && this.props.user.role==='5c3a4be8d08d5d582332d66b') {\r\n               this.setState({isAuthenticated:true})\r\n            }\r\n        }\r\n\r\n        componentWillUpdate(nextProps) {\r\n            if(!nextProps.isAuthenticated){\r\n                this.context.router.history.push('/')\r\n            }\r\n        }\r\n\r\n        render() {\r\n            if(this.state.isAuthenticated){\r\n            return (\r\n                <ComposedComponent {...this.props}/>\r\n            )\r\n            }\r\n           return ( <div className=\"alert alert-danger\">You do no have the permission to view this page</div>)\r\n        }\r\n\r\n    }\r\n\r\n    Authenticate.propTypes = {\r\n        isAuthenticated: PropTypes.bool.isRequired,\r\n    }\r\n    Authenticate.contextTypes = {\r\n        router: PropTypes.object.isRequired\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            isAuthenticated: state.loginReducers.isAuthenticated,\r\n            user:state.loginReducers.user\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(Authenticate)\r\n}","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nclass Roles extends React.Component {\n    render() {\n        return <div className=\"container\">\n            <h3>This is the page for roles </h3>\n\n        </div>\n    }\n}\n\nRoles.contextTypes = {\n    router: PropTypes.object.isRequired\n}\nexport default Roles","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nclass Subjects extends React.Component {\n    render() {\n        return <div className=\"container\">\n            <h3>This is the page for subjects </h3>\n\n        </div>\n    }\n}\n\nSubjects.contextTypes = {\n    router: PropTypes.object.isRequired\n}\nexport default Subjects","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nclass PageNotFound extends React.Component {\n    render() {\n        return <div className=\"alert alert-warning\">\n            <h2>Oops! Page not found</h2>\n\n        </div>\n    }\n}\n\nPageNotFound.contextTypes = {\n    router: PropTypes.object.isRequired\n}\nexport default PageNotFound","import  {SET_CURRENT_USER} from '../actions/types'\r\nimport isEmpty from 'lodash/isEmpty'\r\nconst initialState={\r\n    isAuthenticated:false,\r\n    user:{}\r\n}\r\nexport default (state=initialState,action={})=> {\r\n    switch (action.type){\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                isAuthenticated:!isEmpty(action.user),\r\n                user:action.user\r\n            }\r\n        default:return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport loginReducers from './reducers/loginReducers'\r\n\r\n\r\nexport default combineReducers({\r\nloginReducers\r\n})\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Routes from './routes'\r\nimport {GraphQL, Provider as GraphQLReact,} from 'graphql-react'\r\nimport {applyMiddleware, compose, createStore} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './rootReducer'\r\nimport {Provider} from 'react-redux'\r\nimport {setCurrentUser} from './actions/loginActions'\r\nimport jwt from 'jsonwebtoken'\r\nimport registerServiceWorker from './registerServiceWorker'\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)))\r\n\r\n\r\nif (localStorage.getItem('SchoolSystem')) {\r\n    const token = jwt.decode(localStorage.getItem('SchoolSystem'))\r\n        store.dispatch(setCurrentUser(token))\r\n\r\n}\r\n\r\n\r\nconst graphql = new GraphQL()\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <GraphQLReact value={graphql}>\r\n            <Routes/>\r\n        </GraphQLReact>\r\n    </Provider>\r\n    , document.getElementById('root'))\r\n\r\nregisterServiceWorker()","import React from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport App from \"./components/App\"\r\nimport Home from \"./components/Home\"\r\nimport SignupPage from './components/signup/SignupPage'\r\nimport LoginPage from './components/login/LoginPage'\r\nimport requireLogin from './utils/requireLogin'\r\nimport Students from './components/pages/Students'\r\nimport Teachers from './components/pages/Teachers'\r\nimport requireStudentAuth from './utils/requireStudentAuth'\r\nimport KCPE from './components/pages/KCPE'\r\nimport requireTeacherAuth from './utils/requireTeacherAuth'\r\nimport Classes from './components/pages/Classes'\r\nimport Menus from './components/pages/Menus'\r\nimport requireAdminAuth from './utils/requireAdminAuth'\r\nimport Roles from './components/pages/Roles'\r\nimport Subjects from './components/pages/Subjects'\r\nimport PageNotFound from './components/pages/PageNotFound'\r\n\r\n\r\nexport default () => {\r\n\r\n    return (<BrowserRouter>\r\n            <div>\r\n                <App>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home}/>\r\n                        <Route exact path=\"/signup\" component={SignupPage}/>\r\n                        <Route exact path=\"/login\" component={LoginPage}/>\r\n                        <Route exact path=\"/students\" component={requireLogin(Students)}/>\r\n                        <Route exact path=\"/teachers\" component={requireAdminAuth(Teachers)}/>\r\n                        <Route exact path=\"/kcpe\" component={requireStudentAuth(KCPE)}/>\r\n                        <Route exact path=\"/subjects\" component={requireStudentAuth(Subjects)}/>\r\n                        <Route exact path=\"/classes\" component={requireTeacherAuth(Classes)}/>\r\n                        <Route exact path=\"/menus\" component={requireAdminAuth(Menus)}/>\r\n                        <Route exact path=\"/roles\" component={requireAdminAuth(Roles)}/>\r\n                            <Route  component={PageNotFound}/>\r\n                    </Switch>\r\n                </App>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n"],"sourceRoot":""}